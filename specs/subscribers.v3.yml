openapi: 3.0.1
info:
  title: Subscribers
  description: |-
    Manage subscribers.

    ### OAuth Scopes
    |  **UI Name** | **Permission** | **Parameter** |
    | --- | --- | --- |
    |  Customers | modify | `store_v2_customers` |
    |  Customers | read-only | `store_v2_customers_read_only` |

    ### Headers

    |Header|Parameter|Description|
    |-|-|-|
    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

    ### Example

    ```http
    GET /stores/{store_hash}/v3/catalog/summary
    host: api.bigcommerce.com
    Content-Type: application/json
    X-Auth-Token: {access_token}
    ```

    * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication). 
  termsOfService: ""
  license:
    name: ""
  version: ""
servers:
- url: https://api.bigcommerce.com
security:
- X-Auth-Token: []
tags:
- name: Subscribers
  description: BigCommerce Customers API Definition.
paths:
  /stores/{store_hash}/v3/customers/subscribers:
    get:
      tags:
      - Subscribers
      summary: Get Subscribers
      description: Returns a list of *Subscribers*. Optional filter parameters can
        be passed in.
      operationId: getSubscribers
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: |
          Filter items by email.
        schema:
          type: string
      - name: first_name
        in: query
        description: |
          Filter items by first_name.
        schema:
          type: string
      - name: last_name
        in: query
        description: |
          Filter items by last_name.
        schema:
          type: string
      - name: source
        in: query
        description: |
          Filter items by source.
        schema:
          type: string
      - name: order_id
        in: query
        description: |
          Filter items by order_id.
        schema:
          type: integer
      - name: date_created
        in: query
        description: |
          Filter items by date_created.
        schema:
          type: string
          format: date-time
      - name: date_modified
        in: query
        description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        description: Specifies the page number in a limited (paginated) list of products.
        schema:
          type: integer
      - name: limit
        in: query
        description: Controls the number of items per page in a limited (paginated)
          list of products.
        schema:
          type: integer
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      - name: id
        in: query
        description: Filter items by id.
        schema:
          type: integer
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
                description: |
                  Response payload for the BigCommerce API.
    post:
      tags:
      - Subscribers
      summary: Create a Subscriber
      description: |-
        Creates a *Subscriber*.

        **Required Fields**
        * email

        **Read Only Fields**
        * id
      operationId: createSubscriber
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Post'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
        '409':
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as email.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties:
                      additionalProperties:
                        type: string
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties:
                      additionalProperties:
                        type: string
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: subscriber
    delete:
      tags:
      - Subscribers
      summary: Delete Subscribers
      description: By default, it deletes all *Subscribers*. A filter should be added
        to avoid deleting all subscribers in a store.
      operationId: deleteSubscribers
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: |
          Filter items by email.
        schema:
          type: string
      - name: first_name
        in: query
        description: |
          Filter items by first_name.
        schema:
          type: string
      - name: last_name
        in: query
        description: |
          Filter items by last_name.
        schema:
          type: string
      - name: source
        in: query
        description: |
          Filter items by source.
        schema:
          type: string
      - name: order_id
        in: query
        description: |
          Filter items by order_id.
        schema:
          type: integer
      - name: date_created
        in: query
        description: |
          Filter items by date_created.
        schema:
          type: string
          format: date-time
      - name: date_modified
        in: query
        description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        schema:
          type: string
          format: date-time
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      responses:
        '204':
          description: ""
          content: {}
  /stores/{store_hash}/v3/customers/subscribers/{subscriber_id}:
    get:
      tags:
      - Subscribers
      summary: Get a Subscriber
      description: Returns a *Subscriber*.
      operationId: getSubscriberById
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
      - Subscribers
      summary: Update a Subscriber
      description: |-
        Updates a *Subscriber*.

        **Read Only Fields**
        * id
      operationId: updateSubscriber
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Put'
        required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                title: Subscriber Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as `email`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties:
                      additionalProperties:
                        type: string
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties:
                      additionalProperties:
                        type: string
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: subscriber
    delete:
      tags:
      - Subscribers
      summary: Delete a Subscriber
      description: Deletes a *Subscriber*.
      operationId: deleteSubscriberById
      parameters:
      - name: subscriber_id
        in: path
        description: |
          The ID of the `Subscriber` requested.
        required: true
        schema:
          type: integer
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
          default: application/json
      - name: Accept
        in: header
        schema:
          type: string
          default: application/json
      responses:
        '204':
          description: ""
          content: {}
components:
  schemas:
    subscriber_Full:
      title: subscriber_Full
      description: Full subscriber object returned in responses.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      - type: object
        properties:
          id:
            type: integer
            description: The unique numeric ID of the subscriber; increments sequentially.
          date_modified:
            type: string
            description: |
              The date on which the subscriber was modified.
            format: date-time
          date_created:
            type: string
            description: |
              The date of which the subscriber was created.
            format: date-time
      x-internal: false
    subscriber_Base:
      title: subscriber_Base
      type: object
      properties:
        email:
          type: string
          description: |
            The email of the subscriber. Must be unique.
          x-required:
          - post
        first_name:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The first name of the subscriber.
        last_name:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The last name of the subscriber.
        source:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
        order_id:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: |
            The ID of the source order, if source was an order.
          nullable: true
        channel_id:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: The channel ID where the subscriber was created.
      description: Common Subscriber properties.
      x-internal: false
    Subscriber:
      allOf:
      - title: Subscriber Base
        type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the subscriber; increments sequentially.
            x-required:
            - put
          email:
            type: string
            description: |
              The email of the subscriber. Must be unique.
            x-required:
            - post
          first_name:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The first name of the subscriber.
          last_name:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The last name of the subscriber.
          source:
            maxLength: 255
            minLength: 0
            type: string
            description: |
              The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
          order_id:
            maximum: 2147483647
            minimum: 1
            type: integer
            description: |
              The ID of the source order, if source was an order.
            nullable: true
        description: Common Subscriber properties.
      - type: object
        properties:
          date_modified:
            type: string
            description: |
              The date on which the subscriber was modified.
            format: date-time
          date_created:
            type: string
            description: |
              The date of which the subscriber was created.
            format: date-time
      x-internal: false
    subscriber_Post:
      title: subscriber_Post
      description: |
        The model for a POST to create a subscriber.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      x-internal: false
    subscriber_Put:
      title: subscriber_Put
      description: |
        The model for a PUT to update a subscriber.
      allOf:
      - $ref: '#/components/schemas/subscriber_Base'
      x-internal: false
    CollectionMeta:
      title: Collection Meta
      type: object
      properties:
        pagination:
          title: Pagination
          type: object
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: ?page=1&limit=50
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
              description: |
                Pagination links for the previous and next parts of the whole collection.
          description: Data about the response, including pagination and collection
            totals.
      description: Data about the response, including pagination and collection totals.
      x-internal: false
    Pagination:
      title: Pagination
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: ?page=1&limit=50
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: Data about the response, including pagination and collection totals.
      x-internal: false
    Meta:
      title: Meta
      type: object
      description: Empty meta object; may be used later.
      x-internal: false
    ErrorResponse:
      title: Error Response
      allOf:
      - title: Base Error
        type: object
        properties:
          status:
            type: integer
            description: |
              The HTTP status code.
          title:
            type: string
            description: |
              The error title describing the particular error.
          type:
            type: string
          instance:
            type: string
        description: |
          Error payload for the BigCommerce API.
      - type: object
        properties:
          errors:
            title: Detailed Errors
            type: object
            properties:
              additionalProperties:
                type: string
      x-internal: false
    BaseError:
      title: Base Error
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    NotFound:
      title: Not Found
      type: object
      properties:
        status:
          type: integer
          description: |
            404 HTTP status code.
        title:
          type: string
          description: The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: Error payload for the BigCommerce API.
      x-internal: false
    DetailedErrors:
      title: Detailed Errors
      type: object
      properties:
        additionalProperties:
          type: string
      x-internal: false
  responses:
    subrscriberCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            title: Subscriber Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/subscriber_Full'
              meta:
                $ref: '#/components/schemas/CollectionMeta'
            description: |
              Response payload for the BigCommerce API.
    subscriber_Resp:
      description: ""
      content:
        application/json:
          schema:
            title: Subscriber Response
            type: object
            properties:
              data:
                $ref: '#/components/schemas/subscriber_Full'
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
  parameters:
    FilterEmailParam:
      name: email
      in: query
      description: |
        Filter items by email.
      schema:
        type: string
    FilterFirstNameParam:
      name: first_name
      in: query
      description: |
        Filter items by first_name.
      schema:
        type: string
    FilterLastNameParam:
      name: last_name
      in: query
      description: |
        Filter items by last_name.
      schema:
        type: string
    FilterSourceParam:
      name: source
      in: query
      description: |
        Filter items by source.
      schema:
        type: string
    FilterOrderIdParam:
      name: order_id
      in: query
      description: |
        Filter items by order_id.
      schema:
        type: integer
    FilterDateModifiedParam:
      name: date_modified
      in: query
      description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      in: query
      description: |
        Filter items by date_created.
      schema:
        type: string
        format: date-time
    PageParam:
      name: page
      in: query
      description: Specifies the page number in a limited (paginated) list of products.
      schema:
        type: integer
    LimitParam:
      name: limit
      in: query
      description: Controls the number of items per page in a limited (paginated)
        list of products.
      schema:
        type: integer
    ScriptsSortKeyParam:
      name: sort
      in: query
      description: |
        Scripts field name to sort by.
      schema:
        type: string
        enum:
        - name
        - description
        - date_created
        - date_modified
    DirectionParam:
      name: direction
      in: query
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      schema:
        type: string
        enum:
        - asc
        - desc
    SubscriberIdParam:
      name: subscriber_id
      in: path
      description: |
        The ID of the `Subscriber` requested.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Customers | modify | `store_v2_customers` |
        |  Customers | read-only | `store_v2_customers_read_only` |

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication). 
      name: X-Auth-Token
      in: header
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
